# azure-pipelines.yml

trigger:
  branches:
    include:
      - main  # Adjust based on your repository branch

pool:
  vmImage: 'ubuntu-latest'  # Or select another image based on your requirements

variables:
  pythonVersion: '3.9'  # Python version for the virtual environment

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: $(pythonVersion)
  displayName: 'Set Python Version'

- script: |
    python -m pip install --upgrade pip
    pip install virtualenv
  displayName: 'Upgrade pip and install virtualenv'

- script: |
    virtualenv venv
    source venv/bin/activate
    pip install OpenSSL
    pip install PyPDF2
    pip install PDFNetPython3
  displayName: 'Setup Virtual Environment and Install Dependencies'

- script: |
    source venv/bin/activate  # Activate the virtual environment
    python sign_pdf.py --load  # Run the Python script to load certificates
  displayName: 'Generate Certificates'

- script: |
    source venv/bin/activate  # Activate the virtual environment
    python sign_pdf.py --input_path '$(Build.SourcesDirectory)/path_to_pdf_or_folder' --signatureID 'sig1' --x_coordinate 50 --y_coordinate 200 --output_file '$(Build.ArtifactStagingDirectory)/signed_output.pdf'
  displayName: 'Run PDF Signing Script'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'  # Source directory to copy from
    Contents: '**/*.pdf'  # Copy the signed PDFs from the source directory
    TargetFolder: '$(Build.ArtifactStagingDirectory)'  # Staging directory for artifacts
  displayName: 'Copy Signed PDFs to Artifact Staging Directory'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'  # Path where signed PDFs are copied
    artifactName: 'SignedPDFs'  # Name of the artifact to publish
    publishLocation: 'Container'  # Publish location for the artifact
  displayName: 'Publish Signed PDFs'
